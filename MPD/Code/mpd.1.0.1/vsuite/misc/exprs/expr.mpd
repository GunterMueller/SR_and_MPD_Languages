resource expr()
	int  i, j, k 
	int  iarr [2:12] 

	# ----- ints --------
	# post/pre increment/decrement, unary +
	i = -2 + +4; write(i++)  # 2
	i ++; write(i-- - 1)  # 3
	i --; write(i)  # 2
	write(++i)  # 3
	write(--i)  # 2

	i = +4 ; write(i)  # 4
	++i; write(i)  # 5
	--i; write(i)  # 4
	i =  2 ** 2 ** 3 / 2 ** 2 ** 2 /2 / (11 % 7) * 2 + 1 ; write(i)  # 5

	write ( -3 % +2, -3 mod 2, + -3 ** +3 % 2, -3 ** - - +3 mod 2)#-1 1 -1 1


	#  assignment expressions
	i = 1 + (j = 1 + (k= 1)) ; write(i, j, k)  # 3 2 1
	i = 2 * (j = 3 * ( k= 2 - 1 + ++k)) ; write(i, j, k)  # 18 9 3

	i = 2
	writes((iarr[ ++i - 1] = 3)*4/3 - 1," "); write(iarr[2], i)  # 4 3 2
	writes(iarr[ iarr[i++ - 1] ] = 4, " "); write(++iarr[2], iarr[3], i)

	# ----- reals --------
	# post/pre increment/decrement, unary +
	real  r, s, t 
	real  rarr [2:12] 

	write ("reals")
	r = -2 + +4; write(r++)  # 2
	r ++; write(r-- - 1)  # 3
	r --; write(r)  # 2
	write(++r)  # 3
	write(--r)  # 2

	r = +4 ; write(r)  # 4
	r = ++r; write(r)  # 5
	r = --r; write(r)  # 4
	r =  2 ** 2 ** 3 / 2 ** 2 ** 2 /2 / (11 % 7) * 2 + 1 ; write(r)  # 5
	r = 3; s = 2


	#  assignment expressions
	r = 1 + (s = 1 + (t= 1)) ; write(r, s, t)  # 3 2 1
	r = 2 * (s = 3 * ( t= 2 - 1 + ++t)) ; write(r, s, t)  # 18 9 3

	r = 2
	# 3 3 3
	writes((rarr[ int(++r) - 1] = 3)*4/3 - 1," "); write(rarr[2], r)
	writes(rarr[ int(rarr[int(r++) -1]) ]= 4," ") # 4
	write(++rarr[2], rarr[3], r)# 4  4  4


	# mod
	i =  7 mod 3; if (i != 1 ) { write("error: 7 mod 3 gives", i) }
	i = -7 mod 3; if (i != 2 ) { write("error: -7 mod 3 gives", i) }
	i = -3 mod 7; if (i != 4 ) { write("error: -3 mod 7 gives", i) }
	i =  7 mod -3; if (i != -2 ) { write("error: 7 mod -3 gives", i) }
	i =  3 mod -7; if (i != -4 ) { write("error: 3 mod -7 gives", i) }
	i = -3 mod -7; if (i != -3 ) { write("error: -3 mod -7 gives", i) }
	i = -7 mod -4; if (i != -3 ) { write("error: -7 mod -4 gives", i) }


end expr
