# test lots of different trace messages
# also incidentally tests forward from within co-call, which got a segm fault

global g ()
   write ("g initializing")
   process p
      write ("global g here")
   end
   final
      write ("g finalizing")
   end
end

resource h ()
   write ("h initializing")
   import g
   write ("h here")
   final
      write ("h finalizing")
   end
end

resource r ()
   write ("r initializing")
   import h
   sem s := 5
   sem t
   var n : int

   op o(i:int), p(i:int), q(i:int)
   proc p (i)
      write ("   p", i)
   end
   proc q(i)
      if i = 4 -> return fi
      if i = 5 -> reply fi
      if i = 6 -> forward p(i) fi
   end

   P(s)
   V(t)
   P(t)
   V(s)

   send o(1)
   receive o(n)
   write("n =", n)
   send o(2)
   send o(-5)
   fa i := 1 to 3 ->
      in o(n) st n < 0 ->
         write (n, "< 0")
      [] o(n) st n > 0 ->
         write (n, "> 0")
      [] else ->
	 write ("no n")
      ni
   af

   co (i := 1 to 2)
      p(i)
   // (i := 3 to 6)
      q(i)
   oc

   var hcap := create h()
   destroy hcap

   destroy create vm()

   final
      write ("r finalizing")
   end
end
